
A. Creational design patterns

Creational design patterns provide various object creation mechanisms, which increase flexibility and reuse of existing code.

1. Abstract Factory
    Creates an instance of several families of classes
2. Builder
   Separates object construction from its representation
3. Factory Method
   Creates an instance of several derived classes
4. Singleton
  A class of which only a single instance can exist

--------------------------------------------------
  
B. Strctural Design Patten


Structural design patterns explain how to assemble objects and classes into larger structures, while keeping these structures flexible and efficient.

1. Adaptar 
allows objects with incompatible interfaces to collaborate.

2. Facade
provides a simplified interface to a library, a framework, or any other complex set of classes.

3. Decorator
lets you attach new behaviors to objects by placing these objects inside special wrapper objects that contain the behaviors.

4. Composite
lets you compose objects into tree structures and then work with these structures as if they were individual 
objects.


--------------------------------------------------
  
C. Behavourial 

1. Chain of responsibility
lets you pass requests along a chain of handlers. Upon receiving a request, each handler decides either to process the request or to 
pass it to the next handler in the chain.

2. Observer
lets you define a subscription mechanism to notify multiple objects about any events that happen to the object theyâ€™re observing.

3. State
lets an object alter its behavior when its internal state changes. It appears as if the object changed its class.

4. Stratergy
lets you define a family of algorithms, put each of them into a separate class, and make their objects interchangeable.
